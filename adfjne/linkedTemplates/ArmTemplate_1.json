{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfjne"
		},
		"onPrem_LocalFolder_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onPrem_LocalFolder'"
		},
		"onPrem_Ms_SQL_Server_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onPrem_Ms_SQL_Server'"
		},
		"onPrem_MySQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onPrem_MySQL'"
		},
		"onPrem_LocalFolder_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "d:\\dfdemo"
		},
		"onPrem_LocalFolder_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "MAILBIT\\Jerry"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/onPrem_LocalFolder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('onPrem_LocalFolder_properties_typeProperties_host')]",
					"userId": "[parameters('onPrem_LocalFolder_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onPrem_LocalFolder_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRonPremisesServer",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onPrem_Ms_SQL_Server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onPrem_Ms_SQL_Server_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IRonPremisesServer",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onPrem_MySQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('onPrem_MySQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IRonPremisesServer",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_LocalFolder",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/LOCALFOLDER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "employee.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "employee_name",
						"type": "String"
					},
					{
						"name": "birthdate",
						"type": "String"
					},
					{
						"name": "birthplace",
						"type": "String"
					},
					{
						"name": "martial_status",
						"type": "String"
					},
					{
						"name": "sex",
						"type": "String"
					},
					{
						"name": "child",
						"type": "String"
					},
					{
						"name": "working_year",
						"type": "String"
					},
					{
						"name": "job_position",
						"type": "String"
					},
					{
						"name": "job_level",
						"type": "String"
					},
					{
						"name": "work_location",
						"type": "String"
					},
					{
						"name": "created_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_LocalFolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_mssql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_Ms_SQL_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/MSSQL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "employee_name",
						"type": "varchar"
					},
					{
						"name": "birthdate",
						"type": "date"
					},
					{
						"name": "birthplace",
						"type": "varchar"
					},
					{
						"name": "martial_status",
						"type": "varchar"
					},
					{
						"name": "sex",
						"type": "varchar"
					},
					{
						"name": "child",
						"type": "int",
						"precision": 10
					},
					{
						"name": "working_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_position",
						"type": "varchar"
					},
					{
						"name": "job_level",
						"type": "varchar"
					},
					{
						"name": "work_location",
						"type": "varchar"
					},
					{
						"name": "created_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_Ms_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_mysql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_MySQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/MYSQL"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`employee`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_MySQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/finance_excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_LocalFolder",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/LOCALFOLDER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "finance.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "branch",
						"type": "String"
					},
					{
						"name": "costcenter",
						"type": "String"
					},
					{
						"name": "transaction_date",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "vendor",
						"type": "String"
					},
					{
						"name": "created_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_LocalFolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/finance_mssql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_Ms_SQL_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/MSSQL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "branch",
						"type": "varchar"
					},
					{
						"name": "costcenter",
						"type": "varchar"
					},
					{
						"name": "transaction_date",
						"type": "date"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "vendor",
						"type": "varchar"
					},
					{
						"name": "created_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "finance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_Ms_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/finance_mysql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_MySQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/MYSQL"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`finance`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_MySQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_LocalFolder",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/LOCALFOLDER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "transaction.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_LocalFolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_mssql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_Ms_SQL_Server",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/MSSQL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "branch",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "nomor_resi",
						"type": "varchar"
					},
					{
						"name": "courier_name",
						"type": "varchar"
					},
					{
						"name": "send_date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "send_from",
						"type": "varchar"
					},
					{
						"name": "send_to",
						"type": "varchar"
					},
					{
						"name": "sender",
						"type": "varchar"
					},
					{
						"name": "reciever",
						"type": "varchar"
					},
					{
						"name": "service_name",
						"type": "varchar"
					},
					{
						"name": "weight",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "latitude",
						"type": "decimal",
						"precision": 18,
						"scale": 6
					},
					{
						"name": "longitude",
						"type": "decimal",
						"precision": 18,
						"scale": 6
					},
					{
						"name": "item_category",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "cogs",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "liquid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "employeeNo",
						"type": "varchar"
					},
					{
						"name": "volume",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "payment_type",
						"type": "varchar"
					},
					{
						"name": "asuransi",
						"type": "int",
						"precision": 10
					},
					{
						"name": "item_value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "telp_sender",
						"type": "varchar"
					},
					{
						"name": "telp_reciever",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "created_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_Ms_SQL_Server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transaction_mysql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onPrem_MySQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DEMO/MYSQL"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`transaction`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onPrem_MySQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Cube_Cleansing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DEMO"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "transaction_raw",
								"type": "DatasetReference"
							},
							"name": "TransactionRaw"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CleansingData",
								"type": "DatasetReference"
							},
							"name": "EmptyBranch"
						},
						{
							"dataset": {
								"referenceName": "CleansingData",
								"type": "DatasetReference"
							},
							"name": "EmptyCity"
						},
						{
							"dataset": {
								"referenceName": "CleansingData",
								"type": "DatasetReference"
							},
							"name": "EmptyCourier"
						},
						{
							"dataset": {
								"referenceName": "CleansingData",
								"type": "DatasetReference"
							},
							"name": "CleanData"
						}
					],
					"transformations": [
						{
							"name": "CleansingNullData"
						}
					],
					"script": "source(output(\n\t\tid as string,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as string,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as string,\n\t\tlatitude as string,\n\t\tlongitude as string,\n\t\titem_category as string,\n\t\tamount as string,\n\t\tcogs as string,\n\t\tliquid as string,\n\t\temployeeNo as string,\n\t\tvolume as string,\n\t\tpayment_type as string,\n\t\tasuransi as string,\n\t\titem_value as string,\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> TransactionRaw\nTransactionRaw split(isNull(branch),\n\tisNull(nomor_resi),\n\tisNull(courier_name),\n\tdisjoint: false) ~> CleansingNullData@(EmptyBranch, EmptyCity, EmptyCourier, CleanData)\nCleansingNullData@EmptyBranch sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmptyBranch'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmptyBranch\nCleansingNullData@EmptyCity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmptyCity'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmptyCity\nCleansingNullData@EmptyCourier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmptyCourier'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmptyCourier\nCleansingNullData@CleanData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CleanData'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CleanData"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Cube_Transaction')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DEMO"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "transaction_mssql_az",
								"type": "DatasetReference"
							},
							"name": "Transaction"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "MandiriCube"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "DanaCube"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "NiagaCube"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "CashCube"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "BcaCube"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "BniCube"
						},
						{
							"dataset": {
								"referenceName": "datacube",
								"type": "DatasetReference"
							},
							"name": "OthersCube"
						}
					],
					"transformations": [
						{
							"name": "PaymentSplit"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Transaction\nTransaction split(payment_type == 'MANDIRI',\n\tpayment_type == 'DANA',\n\tpayment_type == 'NIAGA',\n\tpayment_type == 'CASH',\n\tpayment_type == 'OVO',\n\tpayment_type == 'BCA',\n\tpayment_type == 'BNI',\n\tdisjoint: false) ~> PaymentSplit@(MandiriPayment, DanaPayment, NiagaPayment, CashPayment, OvoPayment, BcaPayment, BniPayment, OthersPayment)\nPaymentSplit@MandiriPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MandiriCube\nPaymentSplit@DanaPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DanaCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DanaCube\nPaymentSplit@NiagaPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['NiagaCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NiagaCube\nPaymentSplit@CashPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CashCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CashCube\nPaymentSplit@OvoPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OvoCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nPaymentSplit@BcaPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BcaCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BcaCube\nPaymentSplit@BniPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BniCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BniCube\nPaymentSplit@OthersPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OthersCube'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OthersCube"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Cube_Transaction_ToTable')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DEMO"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "transaction_mssql_az",
								"type": "DatasetReference"
							},
							"name": "Transaction"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PaymentMandiri_Cube",
								"type": "DatasetReference"
							},
							"name": "MandiriCube"
						},
						{
							"dataset": {
								"referenceName": "PayemntDana_Cube",
								"type": "DatasetReference"
							},
							"name": "DanaCube"
						},
						{
							"dataset": {
								"referenceName": "PaymentNiaga_Cube",
								"type": "DatasetReference"
							},
							"name": "NiagaCube"
						},
						{
							"dataset": {
								"referenceName": "PaymentCash_Cube",
								"type": "DatasetReference"
							},
							"name": "CashCube"
						},
						{
							"dataset": {
								"referenceName": "PaymentOvo_cube",
								"type": "DatasetReference"
							},
							"name": "OvoCube"
						},
						{
							"dataset": {
								"referenceName": "PaymentBca_Cube",
								"type": "DatasetReference"
							},
							"name": "BcaCube"
						},
						{
							"dataset": {
								"referenceName": "PaymentBni_Cube",
								"type": "DatasetReference"
							},
							"name": "BniCube"
						},
						{
							"dataset": {
								"referenceName": "PaymentOthers_Cube",
								"type": "DatasetReference"
							},
							"name": "OthersCube"
						}
					],
					"transformations": [
						{
							"name": "PaymentSplit"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Transaction\nTransaction split(payment_type == 'MANDIRI',\n\tpayment_type == 'DANA',\n\tpayment_type == 'NIAGA',\n\tpayment_type == 'CASH',\n\tpayment_type == 'OVO',\n\tpayment_type == 'BCA',\n\tpayment_type == 'BNI',\n\tdisjoint: false) ~> PaymentSplit@(MandiriPayment, DanaPayment, NiagaPayment, CashPayment, OvoPayment, BcaPayment, BniPayment, OthersPayment)\nPaymentSplit@MandiriPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> MandiriCube\nPaymentSplit@DanaPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DanaCube\nPaymentSplit@NiagaPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> NiagaCube\nPaymentSplit@CashPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CashCube\nPaymentSplit@OvoPayment sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> OvoCube\nPaymentSplit@BcaPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> BcaCube\nPaymentSplit@BniPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> BniCube\nPaymentSplit@OthersPayment sink(input(\n\t\tid as integer,\n\t\tbranch as string,\n\t\tcity as string,\n\t\tnomor_resi as string,\n\t\tcourier_name as string,\n\t\tsend_date as timestamp,\n\t\tsend_from as string,\n\t\tsend_to as string,\n\t\tsender as string,\n\t\treciever as string,\n\t\tservice_name as string,\n\t\tweight as decimal(7,2),\n\t\tlatitude as decimal(18,6),\n\t\tlongitude as decimal(18,6),\n\t\titem_category as string,\n\t\tamount as decimal(18,2),\n\t\tcogs as decimal(18,2),\n\t\tliquid as integer,\n\t\temployeeNo as string,\n\t\tvolume as decimal(6,2),\n\t\tpayment_type as string,\n\t\tasuransi as integer,\n\t\titem_value as decimal(18,2),\n\t\ttelp_sender as string,\n\t\ttelp_reciever as string,\n\t\tdescription as string,\n\t\tcreated_date as timestamp,\n\t\tsynch_date as timestamp,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> OthersCube"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData_Employee_MsSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "MSSQL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "employee_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "employee_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "birthdate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "birthdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "birthplace",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "birthplace",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "martial_status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "martial_status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sex",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sex",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "child",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "child",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "working_year",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "working_year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "job_position",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "job_position",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "job_level",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "job_level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "work_location",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "work_location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "employee_mssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "employee_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyData_Employee_MySQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyData_Employee_MsSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "MYSQL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"query": "select * from `employee`"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "employee_name",
											"type": "String"
										},
										"sink": {
											"name": "employee_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "birthdate",
											"type": "DateTime"
										},
										"sink": {
											"name": "birthdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "birthplace",
											"type": "String"
										},
										"sink": {
											"name": "birthplace",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "martial_status",
											"type": "String"
										},
										"sink": {
											"name": "martial_status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sex",
											"type": "String"
										},
										"sink": {
											"name": "sex",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "child",
											"type": "Int32"
										},
										"sink": {
											"name": "child",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "working_year",
											"type": "Int32"
										},
										"sink": {
											"name": "working_year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "job_position",
											"type": "String"
										},
										"sink": {
											"name": "job_position",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "job_level",
											"type": "String"
										},
										"sink": {
											"name": "job_level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "work_location",
											"type": "String"
										},
										"sink": {
											"name": "work_location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date",
											"type": "String"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "employee_mysql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "employee_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyData_Employee_Excel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyData_Employee_MySQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "EXCEL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "employee_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "employee_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "birthdate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "birthdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "birthplace",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "birthplace",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "martial_status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "martial_status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sex",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sex",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "child",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "child",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "working_year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "working_year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "job_position",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "job_position",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "job_level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "job_level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "work_location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "work_location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date",
											"type": "String"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "employee_excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "employee_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "DEMO/PIPELINE"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-10T05:43:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee_mssql')]",
				"[concat(variables('factoryId'), '/datasets/employee_mysql')]",
				"[concat(variables('factoryId'), '/datasets/employee_excel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Finance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData_Finance_MSSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "MSSQL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "costcenter",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "costcenter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "vendor",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "vendor",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "finance_mssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "finance_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyData_Finance_MySQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyData_Finance_Excel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "MYSQL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"query": "select * from `finance`"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch",
											"type": "String"
										},
										"sink": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "costcenter",
											"type": "String"
										},
										"sink": {
											"name": "costcenter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "transaction_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "vendor",
											"type": "String"
										},
										"sink": {
											"name": "vendor",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date",
											"type": "String"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "finance_mysql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "finance_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyData_Finance_Excel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyData_Finance_MSSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "EXCEL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "costcenter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "costcenter",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "transaction_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "vendor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "vendor",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date",
											"type": "String"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "finance_excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "finance_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "DEMO/PIPELINE"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-16T08:27:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/finance_mssql')]",
				"[concat(variables('factoryId'), '/datasets/finance_mysql')]",
				"[concat(variables('factoryId'), '/datasets/finance_excel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Transaction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData_Transaction_MSSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "MSSQL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nomor_resi",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nomor_resi",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "courier_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "courier_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "send_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "send_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "send_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "send_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "send_to",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "send_to",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sender",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "sender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "reciever",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "reciever",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "service_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "service_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										},
										"sink": {
											"name": "weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										},
										"sink": {
											"name": "longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "item_category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "item_category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "cogs",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "cogs",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "liquid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "liquid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "employeeNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "employeeNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "volume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "volume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "asuransi",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "asuransi",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "item_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "item_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "telp_sender",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "telp_sender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "telp_reciever",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "telp_reciever",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "transaction_mssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "transaction_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyData_Transaction_MySQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyData_Transaction_MSSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "MYSQL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"query": "select * from `transaction`"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "branch",
											"type": "String"
										},
										"sink": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nomor_resi",
											"type": "String"
										},
										"sink": {
											"name": "nomor_resi",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "courier_name",
											"type": "String"
										},
										"sink": {
											"name": "courier_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "send_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "send_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "send_from",
											"type": "String"
										},
										"sink": {
											"name": "send_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "send_to",
											"type": "String"
										},
										"sink": {
											"name": "send_to",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sender",
											"type": "String"
										},
										"sink": {
											"name": "sender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "reciever",
											"type": "String"
										},
										"sink": {
											"name": "reciever",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "service_name",
											"type": "String"
										},
										"sink": {
											"name": "service_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "weight",
											"type": "Decimal"
										},
										"sink": {
											"name": "weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "item_category",
											"type": "String"
										},
										"sink": {
											"name": "item_category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "cogs",
											"type": "Decimal"
										},
										"sink": {
											"name": "cogs",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "liquid",
											"type": "Int32"
										},
										"sink": {
											"name": "liquid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "employeeNo",
											"type": "String"
										},
										"sink": {
											"name": "employeeNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "volume",
											"type": "Decimal"
										},
										"sink": {
											"name": "volume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "payment_type",
											"type": "String"
										},
										"sink": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "asuransi",
											"type": "Int32"
										},
										"sink": {
											"name": "asuransi",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "item_value",
											"type": "Decimal"
										},
										"sink": {
											"name": "item_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "telp_sender",
											"type": "String"
										},
										"sink": {
											"name": "telp_sender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "telp_reciever",
											"type": "String"
										},
										"sink": {
											"name": "telp_reciever",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date",
											"type": "String"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "transaction_mysql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "transaction_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyData_Transaction_Excel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyData_Transaction_MySQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "source",
										"value": "EXCEL"
									},
									{
										"name": "synch_date",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nomor_resi",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nomor_resi",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "courier_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "courier_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "send_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "send_date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "send_from",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "send_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "send_to",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "send_to",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "reciever",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reciever",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "service_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "service_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "weight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "item_category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "item_category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "cogs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cogs",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "liquid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "liquid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "employeeNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "employeeNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "volume",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "volume",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "asuransi",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "asuransi",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "item_value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "item_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "telp_sender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "telp_sender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "telp_reciever",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "telp_reciever",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "synch_date",
											"type": "String"
										},
										"sink": {
											"name": "synch_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "transaction_excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "transaction_mssql_az",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "DEMO/PIPELINE"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-10T05:43:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/transaction_mssql')]",
				"[concat(variables('factoryId'), '/datasets/transaction_mysql')]",
				"[concat(variables('factoryId'), '/datasets/transaction_excel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Transaction_Cleansing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Cube_Cleansing",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Cube_Cleansing",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TransactionRaw": {},
									"EmptyBranch": {},
									"EmptyCity": {},
									"EmptyCourier": {},
									"CleanData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "DEMO/DATA FLOW"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-10T07:09:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Cube_Cleansing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Transaction_Cube')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Cube_Transaction",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Cube_Transaction",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Transaction": {},
									"MandiriCube": {},
									"DanaCube": {},
									"NiagaCube": {},
									"CashCube": {},
									"sink1": {},
									"BcaCube": {},
									"BniCube": {},
									"OthersCube": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "DEMO/DATA FLOW"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-10T05:04:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Cube_Transaction')]"
			]
		}
	]
}